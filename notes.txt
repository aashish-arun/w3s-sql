Tutorial

    Home
        SQL is a standard language for storing, manipulating and retrieving data in databases.
        Our SQL tutorial will teach you how to use SQL in: MySQL, SQL Server, MS Access, Oracle, Sybase, Informix, Postgres, and other database systems.

    Intro

        What is SQL?
            It is a standard language for accessing and manipulating databases.
            It stands for Structured Query Language
            It lets you access and manipulate databases
            it became a standard of the American National Standards Institute (ANSI) in 1986, and of the International Organization for Standardization (ISO) in 1987

        What Can SQL do?
            It can execute queries against a database
            It can retrieve data from a database
            It can insert records in a database
            It can update records in a database
            It can delete records from a database
            It can create new databases
            It can create new tables in a database
            It can create stored procedures in a database
            It can create views in a database
            It can set permissions on tables, procedures, and views
        
        SQL is a Standard - BUT....
            Although SQL is an ANSI/ISO standard, there are different versions of the SQL language.
            However, to be compliant with the ANSI standard, they all support at least the major commands (such as SELECT, UPDATE, DELETE, INSERT, WHERE) in a similar manner.

            Note: 
                Most of the SQL database programs also have their own proprietary extensions in addition to the SQL standard!
        
        Using SQL in Your Web Site
            To build a web site that shows data from a database, you will need:
                An RDBMS database program (i.e. MS Access, SQL Server, MySQL)
                To use a server-side scripting language, like PHP or ASP
                To use SQL to get the data you want
                To use HTML / CSS to style the page
        
        RDBMS
            It stands for Relational Database Management System.
            It is the basis for SQL, and for all modern database systems such as MS SQL Server, IBM DB2, Oracle, MySQL, and Microsoft Access.
            The data in it is stored in database objects called tables. A table is a collection of related data entries and it consists of columns and rows.
            For example a table named "Customers":
                SELECT * FROM Customers;

                Note: 
                    Every table is broken up into smaller entities called fields. The fields in the Customers table consist of CustomerID, CustomerName, ContactName, Address, City, PostalCode and Country. A field is a column in a table that is designed to maintain specific information about every record in the table.
                    A record, also called a row, is each individual entry that exists in a table. For example, there are 91 records in the above Customers table. A record is a horizontal entity in a table.
                    A column is a vertical entity in a table that contains all information associated with a specific field in a table.

    Syntax

        SQL Statements
            Most of the actions you need to perform on a database are done with SQL statements.
            SQL statements consist of keywords that are easy to understand.
            The following SQL example statement returns all records from a table named "Customers":
                e.g. SELECT * FROM Customers;

        Database Tables
            A database most often contains one or more tables. Each table is identified by a name (e.g. "Customers" or "Orders"), and contain records (rows) with data.
            Below is a selection from the Customers table used in the examples:
                CustomerID	 CustomerName	                       ContactName	        Address	                        City	    PostalCode	Country
                1            Alfreds Futterkiste	               Maria Anders	        Obere Str. 57	                Berlin	    12209	    Germany
                2	         Ana Trujillo Emparedados y helados	   Ana Trujillo	        Avda. de la Constitución 2222	México D.F.	05021	    Mexico
                3	         Antonio Moreno Taquería	           Antonio Moreno	    Mataderos 2312	                México D.F.	05023	    Mexico
                4            Around the Horn	                   Thomas Hardy	        120 Hanover Sq.	                London	    WA1 1DP	    UK
                5	         Berglunds snabbköp	                   Christina Berglund	Berguvsvägen 8	                Luleå	    S-958 22	Sweden

                Note: 
                    The table above contains five records (one for each customer) and seven columns (CustomerID, CustomerName, ContactName, Address, City, PostalCode, and Country).
        
        Keep in Mind That...
            SQL keywords are NOT case sensitive: select is the same as SELECT (but it is recommened to write all SQL keywords in upper-case).

        Semicolon after SQL Statements?
            Some database systems require a semicolon at the end of each SQL statement.
            Semicolon is the standard way to separate each SQL statement in database systems that allow more than one SQL statement to be executed in the same call to the server.

        Some of The Most Important SQL Commands
            SELECT          - extracts data from a database
            UPDATE          - updates data in a database
            DELETE          - deletes data from a database
            INSERT INTO     - inserts new data into a database
            CREATE DATABASE - creates a new database
            ALTER DATABASE  - modifies a database
            CREATE TABLE    - creates a new table
            ALTER TABLE     - modifies a table
            DROP TABLE      - deletes a table
            CREATE INDEX    - creates an index (search key)
            DROP INDEX      - deletes an index

    SELECT

        SELECT statement
            The SELECT statement is used to select data from a database.
                e.g. SELECT CustomerName, City FROM Customers;
            
        Syntax
            SELECT column1, column2, ...
            FROM table_name;

            Note: 
                Here, column1, column2, ... are the field names of the table you want to select data from and the table_name represents the name of the table you want to select data from.

        Select ALL columns
            If you want to return all columns, without specifying every column name, you can use the SELECT * syntax:
                e.g. SELECT * FROM Customers;

    SELECT DISTINCT

        SELECT DISTINCT Statement
            The SELECT DISTINCT statement is used to return only distinct (different) values.
                e.g. SELECT DISTINCT Country FROM Customers;
                
                Note: 
                    Inside a table, a column often contains many duplicate values; and sometimes you only want to list the different (distinct) values.

        Syntax
            SELECT DISTINCT column1, column2, ...
            FROM table_name;

        SELECT Without DISTINCT
            If you omit the DISTINCT keyword, the SQL statement returns the "Country" value from all the records of the "Customers" table:
                e.g. SELECT Country FROM Customers;

        Count Distinct
            By using the DISTINCT keyword in a function called COUNT, we can return the number of different countries.
                e.g. SELECT COUNT(DISTINCT Country) FROM Customers;

                Note: 
                    The COUNT(DISTINCT column_name) is not supported in Microsoft Access databases.There is a workaround for MS Access using:
                        SELECT Count(*) AS DistinctCountries
                        FROM (SELECT DISTINCT Country FROM Customers);